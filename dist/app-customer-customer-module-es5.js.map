{"version":3,"sources":["src/app/customer/Customer-Create.component.html","src/app/customer/Customer-create.component.ts","src/app/customer/Customer-list-resolver.ts","src/app/customer/Customer-list-thumpnail.component.ts","src/app/customer/Customer-list.component.ts","src/app/customer/Customer.routes.ts","src/app/customer/customer.module.ts","src/app/customer/shared/Customer.Service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div>\\r\\n  <h1>\\r\\n    <div  *ngIf =\\\"this.DataMode === 'Edit'\\\">Edit Customer </div>\\r\\n    <div *ngIf =\\\"this.DataMode === 'Add'\\\">Add Customer </div>\\r\\n  </h1>\\r\\n  <hr>\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <form [formGroup]=\\\"customerForm\\\" (ngSubmit)=\\\"saveCustomer(customerForm.value)\\\" autocomplete=\\\"off\\\" novalidate>\\r\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'error' : !validateFirstName() }\\\">\\r\\n        <label for=\\\"fname\\\">First Name:</label>\\r\\n        <em *ngIf=\\\"!validateFirstName() && customerForm.controls.fname.errors.required\\\">Required</em>\\r\\n        <em *ngIf=\\\"!validateFirstName() && customerForm.controls.fname.errors.pattern\\\">Must start with a letter</em>\\r\\n        <input formControlName=\\\"fname\\\" id=\\\"fname\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"First Name...\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\"  [ngClass]=\\\"{'error' : !validateLastName() }\\\">\\r\\n        <label for=\\\"lname\\\">Last Name:</label>\\r\\n        <em *ngIf=\\\"!validateLastName()\\\">Required</em>\\r\\n        <input formControlName=\\\"lname\\\" id=\\\"lname\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Last Name...\\\" />\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"age\\\">Age:</label>\\r\\n        <em *ngIf=\\\"customerForm.controls.age.errors?.required\\\">Required</em>\\r\\n        <em *ngIf=\\\"customerForm.controls.age.errors?.pattern\\\">Age accept numeric only</em>\\r\\n        <em *ngIf=\\\"customerForm.controls.age.errors?.max || customerForm.controls.age.errors?.min\\\">Maximum is 199</em>\\r\\n        <input formControlName=\\\"age\\\" id=\\\"age\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"age..\\\" />\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"phone\\\">Phone:</label>\\r\\n        <em *ngIf=\\\"customerForm.controls.phone.errors?.required\\\">Required</em>\\r\\n        <em *ngIf=\\\"customerForm.controls.phone.errors?.minlength || customerForm.controls.phone.errors?.maxlength \\\">Phone number min:9 max:15</em>\\r\\n        <input formControlName=\\\"phone\\\" id=\\\"phone\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Phone..\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"PhotoImageUrl\\\">PhotoImageUrl:</label>\\r\\n        <input formControlName=\\\"PhotoImageUrl\\\" id=\\\"PhotoImageUrl\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Photo Image...\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"latitude\\\">latitude:</label>\\r\\n        <input formControlName=\\\"latitude\\\" id=\\\"latitude\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"latitude Image...\\\" />\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"getGeoLocation()\\\">Fill Location</button>\\r\\n      </div>  \\r\\n      <div class=\\\"form-group\\\" >\\r\\n        <label for=\\\"longitude\\\">longitude:</label>\\r\\n        <input formControlName=\\\"longitude\\\" id=\\\"longitude\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"longitude Image...\\\" />\\r\\n      </div>  \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"adhaarID\\\">adhaarID:</label>\\r\\n        <input formControlName=\\\"adhaarID\\\" id=\\\"adhaarID\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"adhaarID Image...\\\" />\\r\\n      </div>  \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"adhaarImage\\\">adhaarImage:</label>\\r\\n          <input formControlName=\\\"adhaarImage\\\" id=\\\"adhaarImage\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"adhaarImage Image...\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"referenceby\\\">referenceby:</label>\\r\\n        <input formControlName=\\\"referenceby\\\" id=\\\"referenceby\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"referenceby Image...\\\" />\\r\\n      </div>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n    </form>\\r\\n  <div>\\r\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { CustomerService } from './shared/Customer.Service';\r\nimport { ICustomer, ICustomerTemplateModel } from './shared/Customer.model';\r\nimport { Router, ActivatedRoute, Params} from '@angular/router';\r\nimport { TOASTR_TOKEN, Toastr } from '../common/toastr.service';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  templateUrl: './Customer-Create.component.html',\r\n  styles: [`\r\n    em {float:right; color:#E05C65; padding-left: 10px;}\r\n    .error input {background-color:#E3C3C5;}\r\n    .error ::-webkit-input-placeholder { color: #999; }\r\n    .error ::-moz-placeholder { color: #999; }\r\n    .error :-moz-placeholder { color:#999; }\r\n    .error :ms-input-placeholder { color: #999; }\r\n  `]\r\n})\r\nexport class CustomerCreateComponent implements OnInit {\r\n  customerForm: FormGroup;\r\n  private addMode = false;\r\n  private customer: ICustomer;\r\n  private CustomerTemplate : ICustomerTemplateModel;\r\n  private fname: FormControl;\r\n  private lname: FormControl;\r\n  private  phone: FormControl;\r\n  private  age:  FormControl;\r\n  private  PhotoImageUrl: FormControl;\r\n  private  address1: FormControl;\r\n  private  address2: FormControl;\r\n  private  Landmark: FormControl ;\r\n  private  city: FormControl;\r\n  private  country: FormControl;\r\n  private  zipcode: FormControl;\r\n  private  latitude: FormControl;\r\n  private  longitude: FormControl;\r\n  private  adhaarID: FormControl;\r\n  private  adhaarImage: FormControl;\r\n  private  referenceby: FormControl;\r\n  DataMode = 'Add';\r\n  constructor(private router: ActivatedRoute,\r\n    private customerService: CustomerService,\r\n    private rediretrouter: Router,\r\n    @Inject(TOASTR_TOKEN) private toastr: Toastr\r\n    ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n      this.router.params.forEach((params: Params) => {\r\n        this.customer = this.customerService.getCustomer(+params['id']);\r\n        this.addMode = false;\r\n        if (this.customer) {\r\n          this.DataMode = 'Edit';\r\n           }\r\n          else {\r\n            this.createEmptyCustomer();\r\n          }\r\n      });\r\n      this.InitFormControl();\r\n     }\r\n\r\n  InitFormControl() {\r\n    this.fname = new FormControl (this.customer.fname, [Validators.required, Validators.pattern('[a-zA-Z].*')]);\r\n    this.lname = new FormControl( this.customer.lname, Validators.required);\r\n    this.phone = new FormControl( this.customer.phone, [Validators.required, Validators.minLength(9), Validators.maxLength(15)]);\r\n    this.PhotoImageUrl = new FormControl( this.customer.PhotoImageUrl);\r\n    this.age  = new FormControl(this.customer.age,\r\n          [Validators.required, Validators.min(17) ,  Validators.max(199), Validators.pattern('^[0-9]*$')]);\r\n    this.latitude  = new FormControl(this.customer.latitude);\r\n    this.longitude  = new FormControl( this.customer.longitude);\r\n    this.adhaarID  = new FormControl(this.customer.adhaarID);\r\n    this.adhaarImage  = new FormControl( this.customer.adhaarImage);\r\n    this.referenceby  = new FormControl(this.customer.referenceby);\r\n\r\n    this.customerForm = new FormGroup({\r\n       fname :  this.fname,\r\n       lname :  this.lname,\r\n       phone : this.phone,\r\n       PhotoImageUrl: this.PhotoImageUrl,\r\n        age: this.age,\r\n        latitude:  this.latitude,\r\n        longitude: this.longitude,\r\n        adhaarID :   this.adhaarID,\r\n        adhaarImage :  this.adhaarImage,\r\n        referenceby :   this.referenceby\r\n    }); \r\n  }\r\n  \r\n  createEmptyCustomer() {\r\n          this.customer = {\r\n            id: Math.floor((Math.random() * 100) + 1),\r\n            fname: '',\r\n            lname: '',\r\n            PhotoImageUrl: '',\r\n            age: 0,\r\n            phone: '',\r\n            location: {\r\n              address1: 'T',\r\n              address2:'',\r\n              Landmark:'',\r\n              city: '',\r\n              country: '',\r\n              zipcode: '' \r\n            },\r\n            latitude: '',\r\n            longitude : '',\r\n            referenceby: '',\r\n            adhaarID: '',\r\n            adhaarImage: ''\r\n        }; \r\n   } // Create empty customer\r\n\r\n  saveCustomer(formValues) {\r\n    if (!this.customerForm.valid) {\r\n        return;\r\n      }\r\n    \r\n    if (this.customer === undefined) {\r\n        this.createEmptyCustomer();\r\n     }\r\n      this.customer.id = Math.floor((Math.random() * 100) + 1);\r\n      this.customer.fname =  formValues.fname;\r\n      this.customer.lname = formValues.lname;\r\n      this.customer.PhotoImageUrl = formValues.PhotoImageUrl;\r\n      this.customer.age = formValues.age;\r\n      this.customer.phone = formValues.phone;\r\n          this.customer.location.address1 = '1057 DT';\r\n          this.customer.location.address2 = 'address2';\r\n          this.customer.location.Landmark = 'Next to NY tower';\r\n          this.customer.location.city = 'London';\r\n          this.customer.location.country = 'England';\r\n          this.customer.location.zipcode = '623707';\r\n      this.customer.latitude = formValues.latitude;\r\n      this.customer.longitude = formValues.longitude;\r\n      this.customer.referenceby =  formValues.referenceby;\r\n      this.customer.adhaarID = formValues.adhaarID;\r\n      this.customer.adhaarImage = formValues.adhaarImage; \r\n     \r\n      //this.customer = Object.assign({}, this.customerForm.value);\r\n      console.warn(' Cusotmer ID  :' + this.customer.id)\r\n      this.customerService.saveCustomer(this.customer);\r\n      this.toastr.success('Profile Saved');\r\n  }\r\n\r\n  validateFirstName() {\r\n    return this.fname.valid || this.fname.untouched;\r\n  }\r\n  validateLastName() {\r\n    return this.lname.valid || this.lname.untouched;\r\n  }\r\n  cancel() {\r\n    this.rediretrouter.navigate(['customer\\list']);\r\n  }\r\n  getGeoLocation() {\r\n     if (navigator.geolocation) {\r\n          const options = {timeout:60000};\r\n          navigator.geolocation.getCurrentPosition(this.fillPosition, this.errorHandler, options);\r\n        } else { \r\n          console.error('Geo Location not supported by this browser');\r\n        }\r\n  }\r\n\r\n errorHandler(err) {\r\n    if (err.code === 1) {\r\n       console.error('Access denied');\r\n    } else if ( err.code === 2) {\r\n       console.error('Error: Position is unavailable!');\r\n    }\r\n }\r\n\r\n fillPosition(position) {\r\n      this.longitude.setValue( position.coords.longitude);\r\n      this.latitude.setValue( position.coords.latitude);\r\n  }\r\n\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { CustomerService } from './shared/Customer.Service';\nimport {map} from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { ICustomer } from './shared/Service.model';\n\n@Injectable()\nexport class CustomerListResolver implements Resolve<any> {\n\n  constructor(private customerService: CustomerService) {\n\n  }\n\n resolve() : Observable<ICustomer[]> {\n     return this.customerService.getCustomers();\n  }\n}\n","import { Component, Input } from '@angular/core';\r\nimport { ICustomer } from './shared/index';\r\nimport {NgbRating} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: `customer-thumbnail`,\r\n  template: `\r\n\r\n  <div [routerLink]=\"['/customer/edit', customer.id]\" class=\"card well hoverwell thumbnail\" style=\"max-width: 15rem; max-height:25rem;\">\r\n  <img style=\"width:15rem; height:25rem;\" class=\"card-img-top img-fluid Thumbnail\" src=\"{{customer?.PhotoImageUrl}}\" alt=\"customer image\">\r\n  <div class=\"card-body\"> <!-- card-img-overlay -->\r\n    <h4 class=\"card-title\">{{customer?.fname}} {{customer?.lname}} </h4>\r\n    <div class=\"card-text\">\r\n      Phone: {{customer?.phone}} <BR>\r\n      <div *ngIf=\"customer?.location\">\r\n        <span>Location: {{customer?.location?.Address1}}</span>\r\n        <span class=\"pad-left\">{{customer?.location?.city}}, {{customer?.location?.zipcode}}</span>\r\n      </div>\r\n    </div>\r\n    <ngb-rating rate=\"{{3}}\" max=\"5\" readonly=\"true\"></ngb-rating>\r\n    <!-- a  [routerLink]=\"['/customer/edit', customer.id]\" class=\"btn btn-primary\">See Profile</a -->\r\n  </div>\r\n</div>\r\n<div>&nbsp;</div>\r\n`,\r\n  styles: [`\r\n    .thumbnail { min-height: 210px; }\r\n    .pad-left { margin-left: 10px; }\r\n    .well div { color: #bbb; }\r\n    .star {\r\n      font-size: 1.5rem;\r\n      color: #b0c4de;\r\n    }\r\n    .filled {\r\n      color: #1e90ff;\r\n    }\r\n    .bad {\r\n      color: #deb0b0;\r\n    }\r\n    .filled.bad {\r\n      color: #ff1e1e;\r\n    }\r\n    ` ]\r\n})\r\nexport class CustomerThumbnailComponent {\r\n  @Input() customer: ICustomer;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from './shared/Customer.Service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ICustomer } from './shared/index';\nimport {NgbRating} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  template: `\n    <div>\n        <h1>Recently Enrolled Customers</h1>\n        <hr/>\n        <div class=\"row\">\n        <div *ngFor=\"let customer of customers\" class=\"col-md-3\">\n           <div class=\"card-deck\">\n             <customer-thumbnail [customer]=\"customer\"></customer-thumbnail>\n            </div>\n        </div>\n        </div>\n    </div>\n    `\n})\n\nexport class CustomersListComponent implements OnInit {\n  customers: ICustomer[];\n  constructor(private eventService: CustomerService, private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    this.customers = this.route.snapshot.data['customers'];\n  }\n}\n","import { CustomersListComponent } from './Customer-list.component';\nimport { CustomerListResolver } from './Customer-list-resolver';\nimport {CustomerCreateComponent } from './Customer-create.component';\n\n\nexport const customerRoutes = [\n  { \n    path: 'list', component: CustomersListComponent, resolve: {customers: CustomerListResolver}\n  },\n  {path: 'edit/:id', component: CustomerCreateComponent}\n];\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule,  ActivatedRouteSnapshot } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { customerRoutes } from './Customer.routes';\r\nimport { CustomersListComponent } from './Customer-list.component';\r\nimport { CustomerService } from './shared';\r\nimport { CustomerListResolver } from './Customer-list-resolver';\r\nimport { CustomerThumbnailComponent } from './Customer-list-thumpnail.component';\r\nimport { CustomerCreateComponent } from './Customer-create.component';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(customerRoutes),\r\n    NgbModule\r\n  ],\r\n  declarations: [\r\n    CustomersListComponent,\r\n    CustomerThumbnailComponent,\r\n    CustomerCreateComponent\r\n  ],\r\n  providers: [\r\n    CustomerService,\r\n    CustomerListResolver\r\n  ]\r\n})\r\nexport class CustomerModule { }\r\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { ICustomer} from './Customer.model';\n\n@Injectable()\nexport class CustomerService {\n  getCustomers(): Observable<ICustomer[]> {\n    let subject = new Subject<ICustomer[]>();\n    setTimeout(() => {subject.next(CUSTOMERS); subject.complete(); }, 100);\n    return subject;\n  }\n\n  getCustomer(id: number): ICustomer {\n    return CUSTOMERS.find(customer => customer.id === id);\n  }\n\n  saveCustomer(customer: ICustomer) {\n    const index = CUSTOMERS.findIndex(x => x.id === customer.id);\n    if (index !== -1) {\n        CUSTOMERS[index] = customer; }\n    else {\n      customer.id = 999;\n      CUSTOMERS.push(customer);\n    }\n  }\n\n  updateCustomer(customer : ICustomer) {\n    const index = CUSTOMERS.findIndex(x => x.id === customer.id);\n    if (index !== -1) {\n        CUSTOMERS[index] = customer; }\n    else { \n      this.saveCustomer(customer); }\n  }\n}\n\nconst CUSTOMERS: ICustomer[] = [\n    {\n      id: 1,\n      fname: 'Angular Connect',\n      lname: 'Angular Connect',\n      PhotoImageUrl: '/assets/images/customer1.jpeg',\n      age:30,\n      phone: '+919486903444',\n      location: {\n        address1: '1057 DT',\n        address2:'',\n        Landmark:'',\n        city: 'London',\n        country: 'England',\n        zipcode: '623707' \n      },\n      latitude:  '-1939489223',\n      longitude : '-103030303',\n      referenceby: '1',\n      adhaarID: '9382839823',\n      adhaarImage: 'http://localhost:3030/33003.jpg'\n    },\n    {\n      id: 2,\n      fname: 'Nanda',\n      lname: 'Baluchamy',\n      PhotoImageUrl: '/assets/images/Customer2.jpeg',\n      age: 12,\n      phone: '+919486903343',\n      location: {\n        address1: '18615 4th AVE SE',\n        address2:'',\n        Landmark:'',\n        city: 'Madurai',\n        country: 'India',\n        zipcode: '623707' \n      },\n      latitude:  '-1939489223',\n      longitude : '-103030303',\n      referenceby: '1',\n      adhaarID: '9382839823',\n      adhaarImage: 'http://localhost:3030/33003.jpg'\n    }\n  ];\n\n"],"sourceRoot":"webpack:///"}