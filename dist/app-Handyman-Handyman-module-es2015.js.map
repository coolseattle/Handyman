{"version":3,"sources":["./src/app/Handyman/Handyman-Create.component.html","./src/app/Handyman/Handyman-create.component.ts","./src/app/Handyman/Handyman-list-resolver.service.ts","./src/app/Handyman/Handyman-list-thumpnail.component.ts","./src/app/Handyman/Handyman-list.component.ts","./src/app/Handyman/Handyman.module.ts","./src/app/Handyman/Handyman.routes.ts","./src/app/Handyman/shared/index.ts"],"names":[],"mappings":"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","file":"app-Handyman-Handyman-module-es2015.js","sourcesContent":["export default \"<div>\\r\\n  <h1>\\r\\n    <div *ngIf=\\\"addMode \\\">Add new Handyman</div>\\r\\n    <div *ngIf=\\\"!addMode\\\">Edit Handyman</div>\\r\\n  </h1>\\r\\n  <hr>\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <form  [formGroup]=\\\"customerForm\\\" (ngSubmit)=\\\"saveCustomer(customerForm.value)\\\" autocomplete=\\\"off\\\" novalidate>\\r\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'error' : !validateFirstName() }\\\">\\r\\n        <label for=\\\"fname\\\">First Name:</label>\\r\\n        <em *ngIf=\\\"!validateFirstName() && customerForm?.controls?.fname?.errors?.required\\\">Required</em>\\r\\n        <em *ngIf=\\\"!validateFirstName() && customerForm?.controls?.fname?.errors?.pattern\\\">Must start with a letter</em>\\r\\n        <input formControlName=\\\"fname\\\" id=\\\"fname\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"First Name...\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\"  [ngClass]=\\\"{'error' : !validateLastName() }\\\">\\r\\n        <label for=\\\"lname\\\">Last Name:</label>\\r\\n        <em *ngIf=\\\"!validateLastName()\\\">Required</em>\\r\\n        <input formControlName=\\\"lname\\\" id=\\\"lname\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Last Name...\\\" />\\r\\n      </div>\\r\\n        \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"age\\\">Age:</label>\\r\\n        <em *ngIf=\\\"customerForm.controls.age.errors?.required\\\">Required</em>\\r\\n        <em *ngIf=\\\"customerForm.controls.age.errors?.pattern\\\">Age accept numeric only</em>\\r\\n        <em *ngIf=\\\"customerForm.controls.age.errors?.max || customerForm.controls.age.errors?.min\\\">Maximum is 199</em>\\r\\n        <input type=\\\"number\\\" minlength=\\\"2\\\" min = \\\"18\\\" formControlName=\\\"age\\\" id=\\\"age\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"age..\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"phone\\\">Phone:</label>\\r\\n        <em *ngIf=\\\"customerForm.controls.phone.errors?.required\\\">Required</em>\\r\\n        <em *ngIf=\\\"customerForm.controls.phone.errors?.minlength || customerForm.controls.phone.errors?.maxlength \\\">Phone number min:9 max:15</em>\\r\\n        <em *ngIf=\\\"customerForm.controls.phone.errors?.mobNumExists\\\">Phone number already exists</em>\\r\\n        <input formControlName=\\\"phone\\\" id=\\\"phone\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Phone..\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"PhotoImageUrl\\\">PhotoImageUrl:</label>\\r\\n        <em *ngIf=\\\"customerForm.controls.PhotoImageUrl.errors?.pattern\\\">Invalid Url</em>\\r\\n       <input formControlName=\\\"PhotoImageUrl\\\" id=\\\"PhotoImageUrl\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Photo Image...\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"latitude\\\">latitude:</label>\\r\\n        <input formControlName=\\\"latitude\\\" id=\\\"latitude\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"latitude Image...\\\" />\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"getGeoLocation()\\\">Fill Location</button>\\r\\n      </div>  \\r\\n      <div class=\\\"form-group\\\" >\\r\\n        <label for=\\\"longitude\\\">longitude:</label>\\r\\n        <input formControlName=\\\"longitude\\\" id=\\\"longitude\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"longitude Image...\\\" />\\r\\n      </div>  \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"adhaarID\\\">adhaarID:</label>\\r\\n        <input formControlName=\\\"adhaarID\\\" id=\\\"adhaarID\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"adhaarID Image...\\\" />\\r\\n      </div>  \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"adhaarImage\\\">adhaarImage:</label>\\r\\n          <input formControlName=\\\"adhaarImage\\\" id=\\\"adhaarImage\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"adhaarImage Image...\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"referenceby\\\">referenceby:</label>\\r\\n        <input formControlName=\\\"referenceby\\\" id=\\\"referenceby\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"referenceby Image...\\\" />\\r\\n      </div>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n    </form>\\r\\n  <div>\\r\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { HandymanService } from './shared/Handyman.Service';\r\nimport { IHandyMan } from './shared/Handyman.model';\r\nimport { Router, ActivatedRoute, Params} from '@angular/router';\r\nimport { TOASTR_TOKEN, Toastr } from '../common/toastr.service';\r\nimport {existingMobileNumberValidator} from '../Validators/existingMobileNumberValidator';\r\n\r\n@Component({\r\n  templateUrl: './Handyman-Create.component.html',\r\n  styles: [`\r\n    em {float:right; color:#E05C65; padding-left: 10px;}\r\n    .error input {background-color:#E3C3C5;}\r\n    .error ::-webkit-input-placeholder { color: #999; }\r\n    .error ::-moz-placeholder { color: #999; }\r\n    .error :-moz-placeholder { color:#999; }\r\n    .error :ms-input-placeholder { color: #999; }\r\n  `]\r\n})\r\nexport class HandymanCreateComponent implements OnInit {\r\n  private URLValidPattern = '^(http[s]?:\\\\/\\\\/){0,1}(www\\\\.){0,1}[a-zA-Z0-9\\\\.\\\\-]+\\\\.[a-zA-Z]{2,5}[\\\\.]{0,1}$';\r\n  customerForm: FormGroup;\r\n  addMode = false;\r\n  private customer: IHandyMan;\r\n  private fname: FormControl;\r\n  private lname: FormControl;\r\n  private  phone: FormControl;\r\n  private  age:  FormControl;\r\n  private  PhotoImageUrl: FormControl;\r\n  private  address1: FormControl;\r\n  private  address2: FormControl;\r\n  private  Landmark: FormControl ;\r\n  private  city: FormControl;\r\n  private  country: FormControl;\r\n  private  zipcode: FormControl;\r\n  private  latitude: FormControl;\r\n  private  longitude: FormControl;\r\n  private  adhaarID: FormControl;\r\n  private  adhaarImage: FormControl;\r\n  private  referenceby: FormControl;\r\n  constructor(private router: ActivatedRoute,\r\n    private customerService: HandymanService,\r\n    private rediretrouter: Router,\r\n    @Inject(TOASTR_TOKEN) private toastr: Toastr\r\n    ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n      this.router.params.forEach((params: Params) => {\r\n     this.customer = this.customerService.getHandyman(+params['id']);\r\n        this.addMode = false;\r\n        if (!this.customer) {\r\n              this.addMode = false;\r\n              this.createEmptyCustomer();\r\n           }\r\n      });\r\n      console.warn( ' fname ' +  this.customer.fname);\r\n      this.InitFormControl();\r\n     }\r\n\r\n  InitFormControl() {\r\n    /*\r\n    this.fname = new FormControl ('', [Validators.required, Validators.pattern('[a-zA-Z].*')]);\r\n    this.lname = new FormControl( '', Validators.required);\r\n    this.phone = new FormControl( '', [Validators.required, Validators.minLength(9), Validators.maxLength(15)]);\r\n    this.PhotoImageUrl = new FormControl( '');\r\n    this.age  = new FormControl('',\r\n          [Validators.required, Validators.min(17) ,  Validators.max(199), Validators.pattern('^[0-9]*$')]);\r\n    this.latitude  = new FormControl('');\r\n    this.longitude  = new FormControl( '');\r\n    this.adhaarID  = new FormControl('');\r\n    this.adhaarImage  = new FormControl('');\r\n    this.referenceby  = new FormControl(''); \r\n    */\r\n    \r\n    this.fname = new FormControl (this.customer.fname, [Validators.required, Validators.pattern('[a-zA-Z].*')]);\r\n    this.lname = new FormControl( this.customer.lname, Validators.required);\r\n    this.phone = new FormControl( this.customer.phone, \r\n       {validators: [Validators.required, Validators.minLength(9), Validators.maxLength(15)],\r\n        asyncValidators: [existingMobileNumberValidator(this.customerService, this.customer.phone, this.addMode)], updateOn: 'blur'});\r\n    this.PhotoImageUrl = new FormControl( this.customer.PhotoImageUrl, Validators.pattern[this.URLValidPattern]);\r\n    this.age  = new FormControl(this.customer.age,\r\n        [Validators.required, Validators.min(17) ,  Validators.max(199), Validators.pattern('^[0-9]*$')]);\r\n    this.latitude  = new FormControl(this.customer.latitude);\r\n    this.longitude  = new FormControl( this.customer.longitude);\r\n    this.adhaarID  = new FormControl(this.customer.adhaarID);\r\n    this.adhaarImage  = new FormControl( this.customer.adhaarImage);\r\n    this.referenceby  = new FormControl(this.customer.referenceby);\r\n\r\n    this.customerForm = new FormGroup({\r\n       fname :  this.fname,\r\n       lname :  this.lname,\r\n       phone : this.phone,\r\n       PhotoImageUrl: this.PhotoImageUrl,\r\n        age: this.age,\r\n        latitude:  this.latitude,\r\n        longitude: this.longitude,\r\n        adhaarID :   this.adhaarID,\r\n        adhaarImage :  this.adhaarImage,\r\n        referenceby :   this.referenceby\r\n    }); \r\n  }\r\n\r\n  validateImageurl(val : any){\r\n    console.warn( \"Photo Image url changed.\");\r\n  }\r\n  createEmptyCustomer() {\r\n          this.customer = {\r\n            id: Math.floor((Math.random() * 100) + 1),\r\n            fname: '',\r\n            lname: '',\r\n            PhotoImageUrl: '',\r\n            age: 0,\r\n            enrolledDate: new Date('9/26/2018'),\r\n            yearsofExperience: 10,\r\n            phone: '',\r\n            location: {\r\n              address1: 'T',\r\n              address2:'',\r\n              Landmark:'',\r\n              city: '',\r\n              country: '',\r\n              zipcode: '' \r\n            },\r\n            latitude: '',\r\n            longitude : '',\r\n            adhaarID: '',\r\n            adhaarImage: '',\r\n            InsuranceImage: '',\r\n            InsuranceProvider: '',\r\n            InsuranceID: '',\r\n            DrivingLicense: '',\r\n            DrivingLicenseImage: '',\r\n            referenceby: '',\r\n            referencebyID: 0,\r\n            ratingaverage: 0,\r\n            serviceType: ''\r\n        }; \r\n   } // Create empty customer\r\n\r\n  saveCustomer(formValues) {\r\n    if (!this.customerForm.valid) {\r\n        return;\r\n      }\r\n    \r\n    if (this.customer === undefined) {\r\n        this.createEmptyCustomer();\r\n     }\r\n      this.customer.id = Math.floor((Math.random() * 100) + 1);\r\n      this.customer.fname =  formValues.fname;\r\n      this.customer.lname = formValues.lname;\r\n      this.customer.PhotoImageUrl = formValues.PhotoImageUrl;\r\n      this.customer.age = formValues.age;\r\n      this.customer.phone = formValues.phone;\r\n          this.customer.location.address1 = '1057 DT';\r\n          this.customer.location.address2 = 'address2';\r\n          this.customer.location.Landmark = 'Next to NY tower';\r\n          this.customer.location.city = 'London';\r\n          this.customer.location.country = 'England';\r\n          this.customer.location.zipcode = '623707';\r\n      this.customer.latitude = formValues.latitude;\r\n      this.customer.longitude = formValues.longitude;\r\n      this.customer.referenceby =  formValues.referenceby;\r\n      this.customer.adhaarID = formValues.adhaarID;\r\n      this.customer.adhaarImage = formValues.adhaarImage; \r\n     \r\n      //this.customer = Object.assign({}, this.customerForm.value);\r\n      console.warn(' Cusotmer ID  :' + this.customer.id)\r\n      this.customerService.saveHandyman(this.customer);\r\n      this.toastr.success('Profile Saved');\r\n  }\r\n\r\n  validateFirstName() {\r\n    return this.fname.valid || this.fname.untouched;\r\n  }\r\n  validateLastName() {\r\n    return this.lname.valid || this.lname.untouched;\r\n  }\r\n  cancel() {\r\n    this.rediretrouter.navigate(['customer\\list']);\r\n  }\r\n  getGeoLocation() {\r\n     if (navigator.geolocation) {\r\n          const options = {timeout:60000};\r\n          navigator.geolocation.getCurrentPosition(this.fillPosition, this.errorHandler, options);\r\n        } else { \r\n          console.error('Geo Location not supported by this browser');\r\n        }\r\n  }\r\n\r\n errorHandler(err) {\r\n    if (err.code === 1) {\r\n       console.error('Access denied');\r\n    } else if ( err.code === 2) {\r\n       console.error('Error: Position is unavailable!');\r\n    }\r\n }\r\n\r\n fillPosition(position) {\r\n      this.longitude.setValue( position.coords.longitude);\r\n      this.latitude.setValue( position.coords.latitude);\r\n  }\r\n\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { HandymanService } from '../Handyman/shared/Handyman.Service';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class HandymanListResolver implements Resolve<any> {\n  constructor(private handymanService: HandymanService) {\n  }\n  resolve() : Observable<any> {\n    return this.handymanService.getHandymen();\n  }\n}\n","import { Component, Input } from '@angular/core';\r\nimport { IHandyMan } from '../Handyman/shared/Handyman.model';\r\nimport {NgbRating} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: `Handyman-thumbnail`,\r\n  template: `\r\n  <div [routerLink]=\"['/handyman/edit', Handyman.id]\" class=\"card well hoverwell thumbnail\" style=\"max-width: 15rem; max-height:25rem;\">\r\n    <img style=\"width:14rem; height:24rem;\" class=\"card-img-top Thumbnail rounded\" src=\"{{Handyman?.PhotoImageUrl}}\" alt=\"Handyman image\" >\r\n    <div class=\"card-body\"> <!-- card-img-overlay -->\r\n      <h4 class=\"card-title\">{{Handyman?.fname}} {{Handyman?.lname}} </h4>\r\n      <div class=\"card-text\">\r\n        Phone: {{Handyman?.phone}} <BR>\r\n        <div *ngIf=\"Handyman?.location\">\r\n          <span>Location: {{Handyman?.location?.Address1}}</span>\r\n          <span class=\"pad-left\">{{Handyman?.location?.city}}, {{Handyman?.location?.zipcode}}</span>\r\n        </div>\r\n      </div>\r\n      <ngb-rating rate=\"{{Handyman?.ratingaverage}}\" max=\"5\" [readonly]=\"true\" >\r\n         <ng-template let-fill=\"fill\" let-index=\"index\">\r\n             <span class=\"star\" [class.filled]=\"fill === 100\" [class.bad]=\"index < 3\">&#9733;</span>\r\n        </ng-template>\r\n      </ngb-rating>\r\n      <!-- a  [routerLink]=\"['/handyman/edit', Handyman.id]\" class=\"btn btn-primary\">See Profile</a -->\r\n    </div>\r\n  </div>\r\n  <div>&nbsp;</div>\r\n  `,\r\n  styles: [`\r\n    .thumbnail { min-height: 210px; }\r\n    .pad-left { margin-left: 10px; }\r\n    .well div { color: #bbb; }\r\n    .star {\r\n      font-size: 1.5rem;\r\n      color: #b0c4de;\r\n    }\r\n    .filled {\r\n      color: #1e90ff;\r\n    }\r\n    .bad {\r\n      color: #deb0b0;\r\n    }\r\n    .filled.bad {\r\n      color: #ff1e1e;\r\n    }\r\n    ` ]\r\n})\r\nexport class HandymanThumbnailComponent {\r\n  @Input() Handyman: IHandyMan;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { HandymanService } from  '../Handyman/shared/Handyman.Service';\nimport { ActivatedRoute } from '@angular/router';\nimport { IHandyMan } from '../Handyman/shared/Handyman.model';\n\n@Component({\n  template: `\n    <div>\n        <h1>Top Handymen</h1>\n        <hr/>\n        <div class=\"row\">\n        <div *ngFor=\"let handyman of Handymen\" class=\"col-md-3\">\n            <div class=\"card-deck\">\n                <Handyman-thumbnail [Handyman]=\"handyman\"></Handyman-thumbnail>\n             </div>\n        </div>\n        </div>\n    </div>\n    `\n})\n\nexport class HandymanListComponent implements OnInit {\n  Handymen: IHandyMan[];\n  constructor(private handymanService: HandymanService, private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n   this.Handymen =  this.route.snapshot.data['Handymen'];\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule,  ActivatedRouteSnapshot } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { HandymanRoutes } from './Handyman.routes';\r\nimport { HandymanListComponent } from './Handyman-list.component';\r\nimport { HandymanService } from './shared';\r\nimport { HandymanListResolver } from './Handyman-list-resolver.service';\r\nimport { HandymanThumbnailComponent } from './Handyman-list-thumpnail.component';\r\nimport { HandymanCreateComponent } from './Handyman-create.component';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(HandymanRoutes),\r\n    NgbModule\r\n  ],\r\n  declarations: [\r\n    HandymanListComponent,\r\n    HandymanThumbnailComponent,\r\n    HandymanCreateComponent\r\n    \r\n  ],\r\n  providers: [\r\n    HandymanService,\r\n    HandymanListResolver\r\n  ]\r\n})\r\nexport class HandymanModule { }\r\n","import { HandymanListComponent } from './Handyman-list.component';\nimport { HandymanListResolver } from './Handyman-list-resolver.service';\nimport {HandymanCreateComponent } from './Handyman-create.component';\nimport { AdminGuardService } from './../router.guard.service/index';\n\nexport const HandymanRoutes = [\n  { \n    path: 'list', component: HandymanListComponent, resolve: {Handymen: HandymanListResolver}\n  },\n  { \n    path: 'edit/:id', \n    component: HandymanCreateComponent,\n    canActivate: [AdminGuardService]\n  }\n];\n","export * from './Handyman.model';\r\nexport * from './Handyman.Service';"],"sourceRoot":"webpack:///"}