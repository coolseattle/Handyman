{"version":3,"sources":["src/app/user/login.component.html","src/app/user/profile.component.html","src/app/user/login.component.ts","src/app/user/profile.component.ts","src/app/user/user.module.ts","src/app/user/user.routes.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,svCAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,gwCAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,cAAb;AAAA;AAAA;AAIE,8BAAoB,WAApB,EAA+D,MAA/D,EAA6E;AAAA;;AAAzD,aAAA,WAAA,GAAA,WAAA;AAA2C,aAAA,MAAA,GAAA,MAAA;AAC9D;;AALH;AAAA;AAAA,8BAOQ,UAPR,EAOkB;AAAA;;AACd,eAAK,WAAL,CAAiB,KAAjB,CAAuB,UAAU,CAAC,QAAlC,EAA4C,UAAU,CAAC,QAAvD;AACA,eAAK,WAAL,CAAiB,WAAjB,CAA6B,SAA7B,CAAwC,UAAA,UAAU,EAAG;AAEhD,gBAAI,UAAU,CAAC,QAAf,EAAwB;AACrB,cAAA,OAAO,CAAC,IAAR,CAAa,uBAAb;AACA,kBAAM,WAAW,GAAG,KAAI,CAAC,WAAL,CAAiB,WAAjB,GAA+B,KAAI,CAAC,WAAL,CAAiB,WAAhD,GAA8D,QAAlF,CAFqB,CAGrB;;AACA,cAAA,KAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD;AACF,WARL;AAUA,eAAK,MAAL,CAAY,QAAZ,CAAqB,eAArB;AACH;AApBD;AAAA;AAAA,iCAqBQ;AACJ,eAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;AAvBH;;AAAA;AAAA,OAAA;;;;cAIkC,2DAAA,CAAA,uBAAA;;cAAuC,4CAAA,CAAA,QAAA;;;;AAJ5D,IAAA,cAAc,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAN1B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,iFAAA,CAAA,EAAA,OADS;;AAAA,KAAV,CAM0B,E,uEAIO,2DAAA,CAAA,uBAAA,C,EAAuC,4CAAA,CAAA,QAAA,C,EAJ9C,CAAA,EAAd,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIb,QAAa,gBAAb;AAAA;AAAA;AAKE,gCAAoB,MAApB,EACU,WADV,EAEgC,MAFhC,EAE8C;AAAA;;AAF1B,aAAA,MAAA,GAAA,MAAA;AACV,aAAA,WAAA,GAAA,WAAA;AACsB,aAAA,MAAA,GAAA,MAAA;AAE/B;;AATH;AAAA;AAAA,mCAWU;AACN,eAAK,SAAL,GAAiB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,WAAL,CAAiB,WAAjB,CAA6B,SAA7C,EAAwD,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAsB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,YAAnB,CAAtB,CAAxD,CAAjB;AACA,eAAK,QAAL,GAAgB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,WAAL,CAAiB,WAAjB,CAA6B,QAA7C,EAAuD,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAlE,CAAhB;AAEA,eAAK,WAAL,GAAmB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AAC/B,YAAA,SAAS,EAAE,KAAK,SADe;AAE/B,YAAA,QAAQ,EAAE,KAAK;AAFgB,WAAd,CAAnB;AAID;AAnBH;AAAA;AAAA,oCAqBc,UArBd,EAqBwB;AACpB,cAAI,KAAK,WAAL,CAAiB,KAArB,EAA4B;AAC1B,iBAAK,WAAL,CAAiB,iBAAjB,CAAmC,UAAU,CAAC,SAA9C,EAAyD,UAAU,CAAC,QAApE;AACA,iBAAK,MAAL,CAAY,OAAZ,CAAoB,eAApB;AACD;AACF;AA1BH;AAAA;AAAA,4CA4BmB;AACf,iBAAO,KAAK,SAAL,CAAe,KAAf,IAAwB,KAAK,SAAL,CAAe,SAA9C;AACD;AA9BH;AAAA;AAAA,2CAgCkB;AACd,iBAAO,KAAK,QAAL,CAAc,KAAd,IAAuB,KAAK,QAAL,CAAc,SAA5C;AACD;AAlCH;AAAA;AAAA,iCAoCQ;AACJ,eAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;AAtCH;;AAAA;AAAA,OAAA;;;;cAK6B,4CAAA,CAAA,QAAA;;cACL,0CAAA,CAAA,aAAA;;;;gBACnB,0CAAA,CAAA,QAAA,C;AAAM,UAAA,IAAA,EAAA,CAAC,mDAAA,CAAA,cAAA,CAAD;;;;;AAPE,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAX5B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,mFAAA,CAAA,EAAA,OADS;;AAAA,KAAV,CAW4B,EAOxB,kCAAA,CAAA,SAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,CAAO,mDAAA,CAAA,cAAA,CAAP,CAAA,CAPwB,E,uEAKA,4CAAA,CAAA,QAAA,C,EACL,0CAAA,CAAA,aAAA,C,EAAW,M,EANN,CAAA,EAAhB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOb,QAAa,UAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,UAAU,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAftB,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,2CAAA,CAAA,aAAA,CAFO,EAGP,2CAAA,CAAA,qBAAA,CAHO,EAIP,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,yCAAA,CAAA,YAAA,CAAtB,CAJO,CADD;AAOR,MAAA,YAAY,EAAE,CACZ,+CAAA,CAAA,kBAAA,CADY,EAEZ,6CAAA,CAAA,gBAAA,CAFY,CAPN;AAWR,MAAA,SAAS,EAAE;AAXH,KAAT,CAesB,CAAA,EAAV,UAAU,CAAV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBN,QAAM,UAAU,GAAG,CACxB;AAAC,MAAA,IAAI,EAAE,SAAP;AAAkB,MAAA,SAAS,EAAE,+CAAA,CAAA,kBAAA;AAA7B,KADwB,EAExB;AAAC,MAAA,IAAI,EAAE,OAAP;AAAgB,MAAA,SAAS,EAAE,6CAAA,CAAA,gBAAA;AAA3B,KAFwB,CAAnB","sourcesContent":["export default \"<h1>Login</h1>\\r\\n<hr>\\r\\n<div class=\\\"col-md-4\\\">\\r\\n  <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login(loginForm.value)\\\" autocomplete=\\\"off\\\" novalidate>\\r\\n    <div class=\\\"form-group\\\" >\\r\\n      <label for=\\\"userName\\\">User Name:</label>\\r\\n      <em *ngIf=\\\"loginForm.controls.userName?.invalid && (loginForm.controls.userName?.touched || mouseoverLogin)\\\">Required</em>\\r\\n      <input (ngModel)=\\\"username\\\" name=\\\"userName\\\" required id=\\\"userName\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"User Name...\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\" >\\r\\n      <label for=\\\"password\\\">Password:</label>\\r\\n      <em *ngIf=\\\"loginForm.controls.password?.invalid  && (loginForm.controls.password?.touched || mouseoverLogin)\\\">Required</em>\\r\\n      <input (ngModel)=\\\"password\\\" name=\\\"password\\\" required id=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\"placeholder=\\\"Password...\\\" />\\r\\n    </div>\\r\\n    \\r\\n    <span (mouseenter)=\\\"mouseoverLogin=true\\\" (mouseleave)=\\\"mouseoverLogin=false\\\">\\r\\n      <button type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid\\\" class=\\\"btn btn-primary\\\">Login</button>\\r\\n    </span>\\r\\n    <button type=\\\"button\\\" (click)=\\\"cancel()\\\" class=\\\"btn btn-default\\\">Cancel</button>\\r\\n  </form>\\r\\n</div>\\r\\n\"","export default \"<div>\\r\\n  <h1>Edit Your Profile </h1>\\r\\n  <hr>\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"saveProfile(profileForm.value)\\\" autocomplete=\\\"off\\\" novalidate>\\r\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'error' : !validateFirstName() }\\\">\\r\\n        <label for=\\\"firstName\\\">First Name:</label>\\r\\n        <em *ngIf=\\\"!validateFirstName() && profileForm.controls.firstName.errors.required\\\">Required</em>\\r\\n        <em *ngIf=\\\"!validateFirstName() && profileForm.controls.firstName.errors.pattern\\\">Must start with a letter</em>\\r\\n        <input formControlName=\\\"firstName\\\" id=\\\"firstName\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"First Name...\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\"  [ngClass]=\\\"{'error' : !validateLastName() }\\\">\\r\\n        <label for=\\\"lastName\\\">Last Name:</label>\\r\\n        <em *ngIf=\\\"!validateLastName()\\\">Required</em>\\r\\n        <input formControlName=\\\"lastName\\\" id=\\\"lastName\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Last Name...\\\" />\\r\\n      </div>\\r\\n\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n    </form>\\r\\n  <div>\\r\\n</div>\"","import { Component } from '@angular/core'\r\nimport { AuthService } from './auth.service'\r\nimport {AuthenticationService, ILoginState} from '../Services/authentication/index';\r\nimport {Observable} from 'rxjs'; \r\n\r\nimport { Router } from '@angular/router'\r\n\r\n@Component({\r\n  templateUrl: './login.component.html',\r\n  styles: [`\r\n    em { float:right; color:#E05C65; padding-left:10px; }\r\n  `]\r\n})\r\nexport class LoginComponent {\r\n  username\r\n  password\r\n  mouseoverLogin\r\n  constructor(private authService:AuthenticationService, private router: Router) {\r\n  }\r\n\r\n  login(formValues) { \r\n    this.authService.login(formValues.userName, formValues.password);\r\n    this.authService.authChange$.subscribe( loginstate => \r\n       { \r\n         if (loginstate.Loggedin){\r\n            console.warn('successully logged in');\r\n            const redirecturl = this.authService.redirecturl ? this.authService.redirecturl : 'events';\r\n            // Redirect the user\r\n            this.router.navigate([redirecturl]);\r\n          }\r\n        }\r\n    );\r\n    this.router.navigate['handyman/list'];\r\n}\r\n  cancel() {\r\n    this.router.navigate(['events'])\r\n  }\r\n}","import { Component, OnInit, Inject } from '@angular/core'\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\r\nimport { AuthService } from './auth.service'\r\nimport { Router} from '@angular/router'\r\nimport { TOASTR_TOKEN, Toastr } from '../common/toastr.service'\r\n\r\n@Component({\r\n  templateUrl: './profile.component.html',\r\n  styles: [`\r\n    em {float:right; color:#E05C65; padding-left: 10px;}\r\n    .error input {background-color:#E3C3C5;}\r\n    .error ::-webkit-input-placeholder { color: #999; }\r\n    .error ::-moz-placeholder { color: #999; }\r\n    .error :-moz-placeholder { color:#999; }\r\n    .error :ms-input-placeholder { color: #999; }\r\n  `]\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  profileForm:FormGroup\r\n  private firstName:FormControl\r\n  private lastName:FormControl\r\n\r\n  constructor(private router:Router, \r\n    private authService:AuthService,\r\n    @Inject(TOASTR_TOKEN) private toastr: Toastr) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.firstName = new FormControl(this.authService.currentUser.firstName, [Validators.required, Validators.pattern('[a-zA-Z].*')])\r\n    this.lastName = new FormControl(this.authService.currentUser.lastName, Validators.required)\r\n\r\n    this.profileForm = new FormGroup({\r\n      firstName: this.firstName,\r\n      lastName: this.lastName\r\n    })\r\n  }\r\n\r\n  saveProfile(formValues) {\r\n    if (this.profileForm.valid) {\r\n      this.authService.updateCurrentUser(formValues.firstName, formValues.lastName)\r\n      this.toastr.success('Profile Saved');\r\n    }\r\n  }\r\n\r\n  validateFirstName() {\r\n    return this.firstName.valid || this.firstName.untouched\r\n  }\r\n  \r\n  validateLastName() {\r\n    return this.lastName.valid || this.lastName.untouched\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['events'])\r\n  }\r\n       \r\n}","import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { RouterModule } from '@angular/router'\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\n\r\nimport { userRoutes } from './user.routes'\r\nimport { ProfileComponent } from './profile.component'\r\nimport { LoginComponent } from './login.component'\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(userRoutes)\r\n  ],\r\n  declarations: [\r\n    ProfileComponent,\r\n    LoginComponent\r\n  ],\r\n  providers: [\r\n\r\n  ]\r\n})\r\nexport class UserModule { }","import { ProfileComponent } from './profile.component';\r\nimport { LoginComponent } from './login.component';\r\n\r\n\r\nexport const userRoutes = [\r\n  {path: 'profile', component: ProfileComponent},\r\n  {path: 'login', component: LoginComponent}\r\n]"],"sourceRoot":"webpack:///"}