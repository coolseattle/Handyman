{"version":3,"sources":["./src/app/user/login.component.html","./src/app/user/profile.component.html","./src/app/user/login.component.ts","./src/app/user/profile.component.ts","./src/app/user/user.module.ts","./src/app/user/user.routes.ts"],"names":[],"mappings":"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","file":"app-user-user-module-es2015.js","sourcesContent":["export default \"<h1>Login</h1>\\r\\n<hr>\\r\\n<div class=\\\"col-md-4\\\">\\r\\n  <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login(loginForm.value)\\\" autocomplete=\\\"off\\\" novalidate>\\r\\n    <div class=\\\"form-group\\\" >\\r\\n      <label for=\\\"userName\\\">User Name:</label>\\r\\n      <em *ngIf=\\\"loginForm.controls.userName?.invalid && (loginForm.controls.userName?.touched || mouseoverLogin)\\\">Required</em>\\r\\n      <input (ngModel)=\\\"username\\\" name=\\\"userName\\\" required id=\\\"userName\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"User Name...\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\" >\\r\\n      <label for=\\\"password\\\">Password:</label>\\r\\n      <em *ngIf=\\\"loginForm.controls.password?.invalid  && (loginForm.controls.password?.touched || mouseoverLogin)\\\">Required</em>\\r\\n      <input (ngModel)=\\\"password\\\" name=\\\"password\\\" required id=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\"placeholder=\\\"Password...\\\" />\\r\\n    </div>\\r\\n    \\r\\n    <span (mouseenter)=\\\"mouseoverLogin=true\\\" (mouseleave)=\\\"mouseoverLogin=false\\\">\\r\\n      <button type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid\\\" class=\\\"btn btn-primary\\\">Login</button>\\r\\n    </span>\\r\\n    <button type=\\\"button\\\" (click)=\\\"cancel()\\\" class=\\\"btn btn-default\\\">Cancel</button>\\r\\n  </form>\\r\\n</div>\\r\\n\"","export default \"<div>\\r\\n  <h1>Edit Your Profile </h1>\\r\\n  <hr>\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"saveProfile(profileForm.value)\\\" autocomplete=\\\"off\\\" novalidate>\\r\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'error' : !validateFirstName() }\\\">\\r\\n        <label for=\\\"firstName\\\">First Name:</label>\\r\\n        <em *ngIf=\\\"!validateFirstName() && profileForm.controls.firstName.errors.required\\\">Required</em>\\r\\n        <em *ngIf=\\\"!validateFirstName() && profileForm.controls.firstName.errors.pattern\\\">Must start with a letter</em>\\r\\n        <input formControlName=\\\"firstName\\\" id=\\\"firstName\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"First Name...\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\"  [ngClass]=\\\"{'error' : !validateLastName() }\\\">\\r\\n        <label for=\\\"lastName\\\">Last Name:</label>\\r\\n        <em *ngIf=\\\"!validateLastName()\\\">Required</em>\\r\\n        <input formControlName=\\\"lastName\\\" id=\\\"lastName\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Last Name...\\\" />\\r\\n      </div>\\r\\n\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n    </form>\\r\\n  <div>\\r\\n</div>\"","import { Component } from '@angular/core'\r\nimport { AuthService } from './auth.service'\r\nimport {AuthenticationService, ILoginState} from '../Services/authentication/index';\r\nimport {Observable} from 'rxjs'; \r\n\r\nimport { Router } from '@angular/router'\r\n\r\n@Component({\r\n  templateUrl: './login.component.html',\r\n  styles: [`\r\n    em { float:right; color:#E05C65; padding-left:10px; }\r\n  `]\r\n})\r\nexport class LoginComponent {\r\n  username\r\n  password\r\n  mouseoverLogin\r\n  constructor(private authService:AuthenticationService, private router: Router) {\r\n  }\r\n\r\n  login(formValues) { \r\n    this.authService.login(formValues.userName, formValues.password);\r\n    this.authService.authChange$.subscribe( loginstate => \r\n       { \r\n         if (loginstate.Loggedin){\r\n            console.warn('successully logged in');\r\n            const redirecturl = this.authService.redirecturl ? this.authService.redirecturl : 'events';\r\n            // Redirect the user\r\n            this.router.navigate([redirecturl]);\r\n          }\r\n        }\r\n    );\r\n    this.router.navigate['handyman/list'];\r\n}\r\n  cancel() {\r\n    this.router.navigate(['events'])\r\n  }\r\n}","import { Component, OnInit, Inject } from '@angular/core'\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\r\nimport { AuthService } from './auth.service'\r\nimport { Router} from '@angular/router'\r\nimport { TOASTR_TOKEN, Toastr } from '../common/toastr.service'\r\n\r\n@Component({\r\n  templateUrl: './profile.component.html',\r\n  styles: [`\r\n    em {float:right; color:#E05C65; padding-left: 10px;}\r\n    .error input {background-color:#E3C3C5;}\r\n    .error ::-webkit-input-placeholder { color: #999; }\r\n    .error ::-moz-placeholder { color: #999; }\r\n    .error :-moz-placeholder { color:#999; }\r\n    .error :ms-input-placeholder { color: #999; }\r\n  `]\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  profileForm:FormGroup\r\n  private firstName:FormControl\r\n  private lastName:FormControl\r\n\r\n  constructor(private router:Router, \r\n    private authService:AuthService,\r\n    @Inject(TOASTR_TOKEN) private toastr: Toastr) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.firstName = new FormControl(this.authService.currentUser.firstName, [Validators.required, Validators.pattern('[a-zA-Z].*')])\r\n    this.lastName = new FormControl(this.authService.currentUser.lastName, Validators.required)\r\n\r\n    this.profileForm = new FormGroup({\r\n      firstName: this.firstName,\r\n      lastName: this.lastName\r\n    })\r\n  }\r\n\r\n  saveProfile(formValues) {\r\n    if (this.profileForm.valid) {\r\n      this.authService.updateCurrentUser(formValues.firstName, formValues.lastName)\r\n      this.toastr.success('Profile Saved');\r\n    }\r\n  }\r\n\r\n  validateFirstName() {\r\n    return this.firstName.valid || this.firstName.untouched\r\n  }\r\n  \r\n  validateLastName() {\r\n    return this.lastName.valid || this.lastName.untouched\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['events'])\r\n  }\r\n       \r\n}","import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { RouterModule } from '@angular/router'\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\n\r\nimport { userRoutes } from './user.routes'\r\nimport { ProfileComponent } from './profile.component'\r\nimport { LoginComponent } from './login.component'\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(userRoutes)\r\n  ],\r\n  declarations: [\r\n    ProfileComponent,\r\n    LoginComponent\r\n  ],\r\n  providers: [\r\n\r\n  ]\r\n})\r\nexport class UserModule { }","import { ProfileComponent } from './profile.component';\r\nimport { LoginComponent } from './login.component';\r\n\r\n\r\nexport const userRoutes = [\r\n  {path: 'profile', component: ProfileComponent},\r\n  {path: 'login', component: LoginComponent}\r\n]"],"sourceRoot":"webpack:///"}